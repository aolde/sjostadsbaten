{"version":3,"sources":["services/timetable.ts","App.tsx","utils/hooks/useForceUpdate.ts","utils/hooks/useInterval.ts","reportWebVitals.ts","index.tsx"],"names":["dayjs","extend","isLeapYearPlugin","relativeTimePlugin","isSameOrAfterPlugin","locale","timeTable","lumabryggan","barnängen","henriksdal","getNextDeparture","from","now","split","map","part","parseFloat","hour","minute","time","second","isSameOrAfter","relativeTime","fromNow","App","nextDepLumabryggan","nextDepBarnängen","nextDepHenriksdal","forceUpdate","set","useState","s","useForceUpdate","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","className","src","process","alt","width","height","format","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAMAA,IAAMC,OAAOC,KACbF,IAAMC,OAAOE,KACbH,IAAMC,OAAOG,KACbJ,IAAMK,OAAO,MAEb,IAAMC,EAAY,CACdC,YAAa,CACT,QAEA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,SAGJC,eAAW,CACP,QAEA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,SAGJC,WAAY,CACR,QAEA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,QAEA,QACA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,QAEA,QACA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,UAID,SAASC,EAAiBC,GAC7B,IAD2D,EACrDC,EAAMZ,MAD+C,cAG/BM,EAAUK,IAHqB,IAG3D,2BAA6C,CAAC,IAAD,UAEpCE,MAAM,KACNC,KAAI,SAACC,GAAD,OAAUC,WAAWD,MAHW,mBAClCE,EADkC,KAC5BC,EAD4B,KAKnCC,EAAOnB,MAAQiB,KAAKA,GAAMC,OAAOA,GAAQE,OAAO,GAEtD,GAAID,EAAKE,cAAcT,EAAK,UACxB,OAAOO,GAX4C,8BAe3D,OAAOnB,MAGJ,SAASsB,EAAaH,GACzB,OAAOA,EAAKI,U,WCxPDC,MA/Cf,WACI,IAAMC,EAAqBf,EAAiB,eACtCgB,EAAmBhB,EAAiB,gBACpCiB,EAAoBjB,EAAiB,cACrCkB,ECPK,WACX,IAAMC,EAAMC,mBAAS,GAAG,GACxB,OAAO,kBAAMD,GAAI,SAACE,GAAD,OAAOA,EAAI,MDKRC,GAMpB,OEbW,SAAqBC,EAAsBC,GACtD,IAAMC,EAAgBC,mBAEtBC,qBAAU,WACNF,EAAcG,QAAUL,KAG5BI,qBAAU,WAKN,IAAIE,EAAKC,aAJT,WAAiB,IAAD,EACZ,UAAAL,EAAcG,eAAd,cAAAH,KAGuBD,GAC3B,OAAO,kBAAMO,cAAcF,MAC5B,CAACL,IFLJQ,EAAY,WACRd,MACD,KAGC,qBAAKe,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,UACI,qBACIC,IAAKC,6CACLC,IAAI,2CACJC,MAAM,MACNC,OAAO,QAGX,0EAEA,oBAAGL,UAAU,aAAb,UACI,iDAA6B,IAC5BrB,EAAaG,GACd,uBAAMkB,UAAU,cAAhB,kBACYlB,EAAmBwB,OAAO,SADtC,UAIJ,oBAAGN,UAAU,aAAb,UACI,kDADJ,IACgCrB,EAAaI,GACzC,uBAAMiB,UAAU,cAAhB,kBACYjB,EAAiBuB,OAAO,SADpC,UAIJ,oBAAGN,UAAU,aAAb,UACI,gDAA4B,IAC3BrB,EAAaK,GACd,uBAAMgB,UAAU,cAAhB,kBACYhB,EAAkBsB,OAAO,SADrC,gBG7BLC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c5315edf.chunk.js","sourcesContent":["import dayjs from \"dayjs\";\nimport relativeTimePlugin from \"dayjs/plugin/relativeTime\";\nimport isLeapYearPlugin from \"dayjs/plugin/isLeapYear\";\nimport isSameOrAfterPlugin from \"dayjs/plugin/isSameOrAfter\";\nimport \"dayjs/locale/sv\";\n\ndayjs.extend(isLeapYearPlugin);\ndayjs.extend(relativeTimePlugin);\ndayjs.extend(isSameOrAfterPlugin);\ndayjs.locale(\"sv\");\n\nconst timeTable = {\n    lumabryggan: [\n        \"00:05\",\n\n        \"06:05\",\n        \"06:25\",\n        \"06:45\",\n\n        \"07:05\",\n        \"07:15\",\n        \"07:25\",\n        \"07:35\",\n        \"07:45\",\n        \"07:55\",\n\n        \"08:05\",\n        \"08:15\",\n        \"08:25\",\n        \"08:35\",\n        \"08:45\",\n        \"08:55\",\n\n        \"09:05\",\n        \"09:25\",\n        \"09:45\",\n\n        \"10:05\",\n        \"10:25\",\n        \"10:45\",\n\n        \"11:05\",\n        \"11:25\",\n        \"11:45\",\n\n        \"12:05\",\n        \"12:25\",\n        \"12:45\",\n\n        \"13:05\",\n        \"13:25\",\n        \"13:45\",\n\n        \"14:05\",\n        \"14:25\",\n        \"14:45\",\n\n        \"15:05\",\n        \"15:25\",\n        \"15:45\",\n        \"15:55\",\n\n        \"16:05\",\n        \"16:15\",\n        \"16:25\",\n        \"16:35\",\n        \"16:45\",\n        \"16:55\",\n\n        \"17:05\",\n        \"17:15\",\n        \"17:25\",\n        \"17:35\",\n        \"17:45\",\n        \"17:55\",\n\n        \"18:05\",\n        \"18:25\",\n        \"18:45\",\n\n        \"19:05\",\n        \"19:25\",\n        \"19:45\",\n\n        \"20:05\",\n        \"20:25\",\n        \"20:45\",\n\n        \"21:05\",\n        \"21:25\",\n        \"21:45\",\n\n        \"22:05\",\n        \"22:25\",\n        \"22:45\",\n\n        \"23:05\",\n        \"23:25\",\n        \"23:45\",\n    ],\n\n    barnängen: [\n        \"00:00\",\n\n        \"06:00\",\n        \"06:20\",\n        \"06:40\",\n\n        \"07:00\",\n        \"07:10\",\n        \"07:20\",\n        \"07:30\",\n        \"07:40\",\n        \"07:50\",\n\n        \"08:00\",\n        \"08:10\",\n        \"08:20\",\n        \"08:30\",\n        \"08:40\",\n        \"08:50\",\n\n        \"09:00\",\n        \"09:20\",\n        \"09:40\",\n\n        \"10:00\",\n        \"10:20\",\n        \"10:40\",\n\n        \"11:00\",\n        \"11:20\",\n        \"11:40\",\n\n        \"12:00\",\n        \"12:20\",\n        \"12:40\",\n\n        \"13:00\",\n        \"13:20\",\n        \"13:40\",\n\n        \"14:00\",\n        \"14:20\",\n        \"14:40\",\n\n        \"15:00\",\n        \"15:20\",\n        \"15:40\",\n        \"15:50\",\n\n        \"16:00\",\n        \"16:10\",\n        \"16:20\",\n        \"16:30\",\n        \"16:40\",\n        \"16:50\",\n\n        \"17:00\",\n        \"17:10\",\n        \"17:20\",\n        \"17:30\",\n        \"17:40\",\n        \"17:50\",\n\n        \"18:00\",\n        \"18:20\",\n        \"18:40\",\n\n        \"19:00\",\n        \"19:20\",\n        \"19:40\",\n\n        \"20:00\",\n        \"20:20\",\n        \"20:40\",\n\n        \"21:00\",\n        \"21:20\",\n        \"21:40\",\n\n        \"22:00\",\n        \"22:20\",\n        \"22:40\",\n\n        \"23:00\",\n        \"23:20\",\n        \"23:40\",\n    ],\n\n    henriksdal: [\n        \"00:10\",\n\n        \"06:10\",\n        \"06:30\",\n        \"06:50\",\n\n        \"07:00\",\n        \"07:10\",\n        \"07:20\",\n        \"07:30\",\n        \"07:40\",\n        \"07:50\",\n\n        \"08:00\",\n        \"08:10\",\n        \"08:20\",\n        \"08:30\",\n        \"08:40\",\n        \"08:50\",\n\n        \"09:00\",\n        \"09:10\",\n        \"09:30\",\n        \"09:50\",\n\n        \"10:10\",\n        \"10:30\",\n        \"10:50\",\n\n        \"11:10\",\n        \"11:30\",\n        \"11:50\",\n\n        \"12:10\",\n        \"12:30\",\n        \"12:50\",\n\n        \"13:10\",\n        \"13:30\",\n        \"13:50\",\n\n        \"14:10\",\n        \"14:30\",\n        \"14:50\",\n\n        \"15:10\",\n        \"15:30\",\n        \"15:50\",\n\n        \"16:00\",\n        \"16:10\",\n        \"16:20\",\n        \"16:30\",\n        \"16:40\",\n        \"16:50\",\n\n        \"17:00\",\n        \"17:10\",\n        \"17:20\",\n        \"17:30\",\n        \"17:40\",\n        \"17:50\",\n\n        \"18:00\",\n        \"18:10\",\n        \"18:30\",\n        \"18:50\",\n\n        \"19:10\",\n        \"19:30\",\n        \"19:50\",\n\n        \"20:10\",\n        \"20:30\",\n        \"20:50\",\n\n        \"21:10\",\n        \"21:30\",\n        \"21:50\",\n\n        \"22:10\",\n        \"22:30\",\n        \"22:50\",\n\n        \"23:10\",\n        \"23:30\",\n        \"23:50\",\n    ],\n};\n\nexport function getNextDeparture(from: keyof typeof timeTable) {\n    const now = dayjs();\n\n    for (const departureTime of timeTable[from]) {\n        const [hour, minute] = departureTime\n            .split(\":\")\n            .map((part) => parseFloat(part));\n\n        const time = dayjs().hour(hour).minute(minute).second(0);\n\n        if (time.isSameOrAfter(now, \"second\")) {\n            return time;\n        }\n    }\n\n    return dayjs();\n}\n\nexport function relativeTime(time: dayjs.Dayjs) {\n    return time.fromNow();\n}\n","import \"./App.css\";\nimport { getNextDeparture, relativeTime } from \"./services/timetable\";\nimport useForceUpdate from \"./utils/hooks/useForceUpdate\";\nimport useInterval from \"./utils/hooks/useInterval\";\n\nfunction App() {\n    const nextDepLumabryggan = getNextDeparture(\"lumabryggan\");\n    const nextDepBarnängen = getNextDeparture(\"barnängen\");\n    const nextDepHenriksdal = getNextDeparture(\"henriksdal\");\n    const forceUpdate = useForceUpdate();\n\n    useInterval(() => {\n        forceUpdate();\n    }, 1000);\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img\n                    src={process.env.PUBLIC_URL + \"/android-chrome-512x512.png\"}\n                    alt=\"Nästa avgång i Sjöstadstrafiken\"\n                    width=\"128\"\n                    height=\"128\"\n                />\n\n                <h1>Nästa avgång i Sjöstadstrafiken</h1>\n\n                <p className=\"App-depRow\">\n                    <strong>Lumabryggan</strong>{\" \"}\n                    {relativeTime(nextDepLumabryggan)}\n                    <span className=\"App-depTime\">\n                        &nbsp;({nextDepLumabryggan.format(\"HH:mm\")})\n                    </span>\n                </p>\n                <p className=\"App-depRow\">\n                    <strong>Barnängen</strong> {relativeTime(nextDepBarnängen)}\n                    <span className=\"App-depTime\">\n                        &nbsp;({nextDepBarnängen.format(\"HH:mm\")})\n                    </span>\n                </p>\n                <p className=\"App-depRow\">\n                    <strong>Henriksdal</strong>{\" \"}\n                    {relativeTime(nextDepHenriksdal)}\n                    <span className=\"App-depTime\">\n                        &nbsp;({nextDepHenriksdal.format(\"HH:mm\")})\n                    </span>\n                </p>\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n","import { useState } from \"react\";\n\nexport default function useForceUpdate() {\n    const set = useState(0)[1];\n    return () => set((s) => s + 1);\n}\n","import { useRef, useEffect } from \"react\";\n\nexport default function useInterval(callback: () => void, delay: number) {\n    const savedCallback = useRef<() => void>();\n\n    useEffect(() => {\n        savedCallback.current = callback;\n    });\n\n    useEffect(() => {\n        function tick() {\n            savedCallback.current?.();\n        }\n\n        let id = setInterval(tick, delay);\n        return () => clearInterval(id);\n    }, [delay]);\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}