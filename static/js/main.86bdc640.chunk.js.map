{"version":3,"sources":["components/Collapsable.module.css","components/FullTimeTable.module.css","services/holidays.ts","services/timetable.ts","components/Collapsable.tsx","components/FullTimeTable.tsx","App.tsx","utils/hooks/useForceUpdate.ts","utils/hooks/useInterval.ts","index.tsx"],"names":["module","exports","holidays","date","holiday","dayjs","extend","isLeapYearPlugin","relativeTimePlugin","isSameOrAfterPlugin","locale","timeTable","weekdays","lumabryggan","barnängen","henriksdal","weekends","getNextDeparture","from","now","times","isWeekendTraffic","departureTime","split","map","part","parseFloat","hour","minute","time","second","isSameOrAfter","add","relativeTime","formatTime","format","day","dayOfWeek","isWeekend","getHoliday","Boolean","find","Collapsable","name","header","children","useState","isOpen","setOpen","className","styles","button","onClick","mixpanel","isOpenNow","FullTimeTable","stop","selectedTime","ref","useRef","useMemo","moveFirstLast","useEffect","current","querySelectorAll","forEach","el","scrollIntoView","behavior","block","inline","container","arr","push","shift","App","nextDepLumabryggan","nextDepBarnängen","nextDepHenriksdal","weekendTraffic","forceUpdate","set","s","useForceUpdate","callback","delay","savedCallback","id","setInterval","clearInterval","useInterval","departureHeader","stopName","nextDeparture","src","alt","width","height","href","target","rel","api_host","ReactDOM","render","StrictMode","document","getElementById","pageName"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,OAAS,8B,mBCA3BD,EAAOC,QAAU,CAAC,UAAY,mC,qNCSfC,EAVE,CACb,CAAEC,KAAM,aAAcC,QAAS,iBAC/B,CAAED,KAAM,aAAcC,QAAS,oBAC/B,CAAED,KAAM,aAAcC,QAAS,mBAC/B,CAAED,KAAM,aAAcC,QAAS,oBAC/B,CAAED,KAAM,aAAcC,QAAS,6BAC/B,CAAED,KAAM,aAAcC,QAAS,kBAC/B,CAAED,KAAM,aAAcC,QAAS,YAC/B,CAAED,KAAM,aAAcC,QAAS,kB,MCDnCC,IAAMC,OAAOC,KACbF,IAAMC,OAAOE,KACbH,IAAMC,OAAOG,KACbJ,IAAMK,OAAO,MAEN,IAAMC,EAAY,CACrBC,SAAU,CACNC,YAAa,CACT,QAEA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,SAGJC,eAAW,CACP,QAEA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,SAGJC,WAAY,CACR,QAEA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,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","file":"static/js/main.86bdc640.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Collapsable_button__1Cxc7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FullTimeTable_container__1DRyD\"};","const holidays = [\n    { date: \"2021-01-01\", holiday: \"Nyårsdagen\" },\n    { date: \"2021-01-06\", holiday: \"Trettondedag jul\" },\n    { date: \"2021-04-02\", holiday: \"Långfredagen\" },\n    { date: \"2021-04-05\", holiday: \"Annandag påsk\" },\n    { date: \"2021-05-13\", holiday: \"Kristi himmelsfärdsdag\" },\n    { date: \"2021-06-25\", holiday: \"Midsommarafton\" },\n    { date: \"2021-12-24\", holiday: \"Julafton\" },\n    { date: \"2021-12-31\", holiday: \"Nyårsafton\" },\n];\nexport default holidays;\n","import dayjs from \"dayjs\";\nimport relativeTimePlugin from \"dayjs/plugin/relativeTime\";\nimport isLeapYearPlugin from \"dayjs/plugin/isLeapYear\";\nimport isSameOrAfterPlugin from \"dayjs/plugin/isSameOrAfter\";\nimport holidays from \"./holidays\";\nimport \"dayjs/locale/sv\";\n\ndayjs.extend(isLeapYearPlugin);\ndayjs.extend(relativeTimePlugin);\ndayjs.extend(isSameOrAfterPlugin);\ndayjs.locale(\"sv\");\n\nexport const timeTable = {\n    weekdays: {\n        lumabryggan: [\n            \"00:05\",\n\n            \"06:05\",\n            \"06:25\",\n            \"06:45\",\n\n            \"07:05\",\n            \"07:15\",\n            \"07:25\",\n            \"07:35\",\n            \"07:45\",\n            \"07:55\",\n\n            \"08:05\",\n            \"08:15\",\n            \"08:25\",\n            \"08:35\",\n            \"08:45\",\n            \"08:55\",\n\n            \"09:05\",\n            \"09:25\",\n            \"09:45\",\n\n            \"10:05\",\n            \"10:25\",\n            \"10:45\",\n\n            \"11:05\",\n            \"11:25\",\n            \"11:45\",\n\n            \"12:05\",\n            \"12:25\",\n            \"12:45\",\n\n            \"13:05\",\n            \"13:25\",\n            \"13:45\",\n\n            \"14:05\",\n            \"14:25\",\n            \"14:45\",\n\n            \"15:05\",\n            \"15:25\",\n            \"15:45\",\n            \"15:55\",\n\n            \"16:05\",\n            \"16:15\",\n            \"16:25\",\n            \"16:35\",\n            \"16:45\",\n            \"16:55\",\n\n            \"17:05\",\n            \"17:15\",\n            \"17:25\",\n            \"17:35\",\n            \"17:45\",\n            \"17:55\",\n\n            \"18:05\",\n            \"18:25\",\n            \"18:45\",\n\n            \"19:05\",\n            \"19:25\",\n            \"19:45\",\n\n            \"20:05\",\n            \"20:25\",\n            \"20:45\",\n\n            \"21:05\",\n            \"21:25\",\n            \"21:45\",\n\n            \"22:05\",\n            \"22:25\",\n            \"22:45\",\n\n            \"23:05\",\n            \"23:25\",\n            \"23:45\",\n        ],\n\n        barnängen: [\n            \"00:00\",\n\n            \"06:00\",\n            \"06:20\",\n            \"06:40\",\n\n            \"07:00\",\n            \"07:10\",\n            \"07:20\",\n            \"07:30\",\n            \"07:40\",\n            \"07:50\",\n\n            \"08:00\",\n            \"08:10\",\n            \"08:20\",\n            \"08:30\",\n            \"08:40\",\n            \"08:50\",\n\n            \"09:00\",\n            \"09:20\",\n            \"09:40\",\n\n            \"10:00\",\n            \"10:20\",\n            \"10:40\",\n\n            \"11:00\",\n            \"11:20\",\n            \"11:40\",\n\n            \"12:00\",\n            \"12:20\",\n            \"12:40\",\n\n            \"13:00\",\n            \"13:20\",\n            \"13:40\",\n\n            \"14:00\",\n            \"14:20\",\n            \"14:40\",\n\n            \"15:00\",\n            \"15:20\",\n            \"15:40\",\n            \"15:50\",\n\n            \"16:00\",\n            \"16:10\",\n            \"16:20\",\n            \"16:30\",\n            \"16:40\",\n            \"16:50\",\n\n            \"17:00\",\n            \"17:10\",\n            \"17:20\",\n            \"17:30\",\n            \"17:40\",\n            \"17:50\",\n\n            \"18:00\",\n            \"18:20\",\n            \"18:40\",\n\n            \"19:00\",\n            \"19:20\",\n            \"19:40\",\n\n            \"20:00\",\n            \"20:20\",\n            \"20:40\",\n\n            \"21:00\",\n            \"21:20\",\n            \"21:40\",\n\n            \"22:00\",\n            \"22:20\",\n            \"22:40\",\n\n            \"23:00\",\n            \"23:20\",\n            \"23:40\",\n        ],\n\n        henriksdal: [\n            \"00:10\",\n\n            \"06:10\",\n            \"06:30\",\n            \"06:50\",\n\n            \"07:00\",\n            \"07:10\",\n            \"07:20\",\n            \"07:30\",\n            \"07:40\",\n            \"07:50\",\n\n            \"08:00\",\n            \"08:10\",\n            \"08:20\",\n            \"08:30\",\n            \"08:40\",\n            \"08:50\",\n\n            \"09:00\",\n            \"09:10\",\n            \"09:30\",\n            \"09:50\",\n\n            \"10:10\",\n            \"10:30\",\n            \"10:50\",\n\n            \"11:10\",\n            \"11:30\",\n            \"11:50\",\n\n            \"12:10\",\n            \"12:30\",\n            \"12:50\",\n\n            \"13:10\",\n            \"13:30\",\n            \"13:50\",\n\n            \"14:10\",\n            \"14:30\",\n            \"14:50\",\n\n            \"15:10\",\n            \"15:30\",\n            \"15:50\",\n\n            \"16:00\",\n            \"16:10\",\n            \"16:20\",\n            \"16:30\",\n            \"16:40\",\n            \"16:50\",\n\n            \"17:00\",\n            \"17:10\",\n            \"17:20\",\n            \"17:30\",\n            \"17:40\",\n            \"17:50\",\n\n            \"18:00\",\n            \"18:10\",\n            \"18:30\",\n            \"18:50\",\n\n            \"19:10\",\n            \"19:30\",\n            \"19:50\",\n\n            \"20:10\",\n            \"20:30\",\n            \"20:50\",\n\n            \"21:10\",\n            \"21:30\",\n            \"21:50\",\n\n            \"22:10\",\n            \"22:30\",\n            \"22:50\",\n\n            \"23:10\",\n            \"23:30\",\n            \"23:50\",\n        ],\n    },\n\n    weekends: {\n        lumabryggan: [\n            \"00:05\",\n\n            \"08:05\",\n            \"08:25\",\n            \"08:45\",\n\n            \"09:05\",\n            \"09:25\",\n            \"09:45\",\n\n            \"10:05\",\n            \"10:25\",\n            \"10:45\",\n\n            \"11:05\",\n            \"11:25\",\n            \"11:45\",\n\n            \"12:05\",\n            \"12:25\",\n            \"12:45\",\n\n            \"13:05\",\n            \"13:25\",\n            \"13:45\",\n\n            \"14:05\",\n            \"14:25\",\n            \"14:45\",\n\n            \"15:05\",\n            \"15:25\",\n            \"15:45\",\n\n            \"16:05\",\n            \"16:25\",\n            \"16:45\",\n\n            \"17:05\",\n            \"17:25\",\n            \"17:45\",\n\n            \"18:05\",\n            \"18:25\",\n            \"18:45\",\n\n            \"19:05\",\n            \"19:25\",\n            \"19:45\",\n\n            \"20:05\",\n            \"20:25\",\n            \"20:45\",\n\n            \"21:05\",\n            \"21:25\",\n            \"21:45\",\n\n            \"22:05\",\n            \"22:25\",\n            \"22:45\",\n\n            \"23:05\",\n            \"23:25\",\n            \"23:45\",\n        ],\n\n        barnängen: [\n            \"00:00\",\n\n            \"08:00\",\n            \"08:20\",\n            \"08:40\",\n\n            \"09:00\",\n            \"09:20\",\n            \"09:40\",\n\n            \"10:00\",\n            \"10:20\",\n            \"10:40\",\n\n            \"11:00\",\n            \"11:20\",\n            \"11:40\",\n\n            \"12:00\",\n            \"12:20\",\n            \"12:40\",\n\n            \"13:00\",\n            \"13:20\",\n            \"13:40\",\n\n            \"14:00\",\n            \"14:20\",\n            \"14:40\",\n\n            \"15:00\",\n            \"15:20\",\n            \"15:40\",\n\n            \"16:00\",\n            \"16:20\",\n            \"16:40\",\n\n            \"17:00\",\n            \"17:20\",\n            \"17:40\",\n\n            \"18:00\",\n            \"18:20\",\n            \"18:40\",\n\n            \"19:00\",\n            \"19:20\",\n            \"19:40\",\n\n            \"20:00\",\n            \"20:20\",\n            \"20:40\",\n\n            \"21:00\",\n            \"21:20\",\n            \"21:40\",\n\n            \"22:00\",\n            \"22:20\",\n            \"22:40\",\n\n            \"23:00\",\n            \"23:20\",\n            \"23:40\",\n        ],\n\n        henriksdal: [\n            \"00:10\",\n\n            \"08:10\",\n            \"08:30\",\n            \"08:50\",\n\n            \"09:10\",\n            \"09:30\",\n            \"09:50\",\n\n            \"10:10\",\n            \"10:30\",\n            \"10:50\",\n\n            \"11:10\",\n            \"11:30\",\n            \"11:50\",\n\n            \"12:10\",\n            \"12:30\",\n            \"12:50\",\n\n            \"13:10\",\n            \"13:30\",\n            \"13:50\",\n\n            \"14:10\",\n            \"14:30\",\n            \"14:50\",\n\n            \"15:10\",\n            \"15:30\",\n            \"15:50\",\n\n            \"16:10\",\n            \"16:30\",\n            \"16:50\",\n\n            \"17:10\",\n            \"17:30\",\n            \"17:50\",\n\n            \"18:10\",\n            \"18:30\",\n            \"18:50\",\n\n            \"19:10\",\n            \"19:30\",\n            \"19:50\",\n\n            \"20:10\",\n            \"20:30\",\n            \"20:50\",\n\n            \"21:10\",\n            \"21:30\",\n            \"21:50\",\n\n            \"22:10\",\n            \"22:30\",\n            \"22:50\",\n\n            \"23:10\",\n            \"23:30\",\n            \"23:50\",\n        ],\n    },\n};\n\nexport function getNextDeparture(\n    from: keyof typeof timeTable.weekdays,\n    now: dayjs.Dayjs = dayjs()\n): dayjs.Dayjs {\n    const times = isWeekendTraffic(now)\n        ? timeTable.weekends\n        : timeTable.weekdays;\n\n    for (const departureTime of times[from]) {\n        const [hour, minute] = departureTime\n            .split(\":\")\n            .map((part) => parseFloat(part));\n\n        const time = now.hour(hour).minute(minute).second(0);\n\n        if (time.isSameOrAfter(now, \"second\")) {\n            return time;\n        }\n    }\n\n    return getNextDeparture(\n        from,\n        now.add(1, \"day\").hour(0).minute(0).second(0)\n    );\n}\n\nexport function relativeTime(time: dayjs.Dayjs, now = dayjs()) {\n    return time.from(now, true);\n}\n\nexport function formatTime(date: dayjs.Dayjs) {\n    return date.format(\"HH:mm\");\n}\n\nexport function isWeekendTraffic(day: dayjs.Dayjs = dayjs()) {\n    const dayOfWeek = day.day();\n    const isWeekend = dayOfWeek === 0 || dayOfWeek === 6;\n\n    if (isWeekend) return true;\n\n    const holiday = getHoliday(day);\n    return Boolean(holiday);\n}\n\nexport function getHoliday(day: dayjs.Dayjs = dayjs()) {\n    const date = day.format(\"YYYY-MM-DD\");\n    return holidays.find((day) => day.date === date);\n}\n","import React, { useState } from \"react\";\nimport styles from \"./Collapsable.module.css\";\nimport * as mixpanel from \"mixpanel-browser\";\n\ntype Props = {\n    name: string;\n    header: React.ReactNode;\n    children: React.ReactNode;\n};\n\nexport default function Collapsable({ name, header, children }: Props) {\n    const [isOpen, setOpen] = useState(false);\n\n    return (\n        <>\n            <button\n                className={styles.button}\n                onClick={() => {\n                    mixpanel.track(\"Toggle timetable\", {\n                        isOpenNow: !isOpen,\n                        name: name,\n                    });\n                    setOpen(!isOpen);\n                }}\n            >\n                {header}\n            </button>\n            {isOpen ? children : null}\n        </>\n    );\n}\n","import React, { useEffect, useRef, useMemo } from \"react\";\nimport { timeTable } from \"../services/timetable\";\nimport styles from \"./FullTimeTable.module.css\";\n\ntype Props = {\n    stop: keyof typeof timeTable.weekdays;\n    selectedTime?: string;\n};\n\nexport default function FullTimeTable({ stop, selectedTime }: Props) {\n    const ref = useRef<HTMLDivElement>(null);\n    const weekdays = useMemo(\n        () => moveFirstLast([...timeTable.weekdays[stop]]),\n        [stop]\n    );\n    const weekends = useMemo(\n        () => moveFirstLast([...timeTable.weekends[stop]]),\n        [stop]\n    );\n\n    useEffect(() => {\n        if (ref.current) {\n            ref.current.querySelectorAll(\".is-selected\").forEach((el) =>\n                el.scrollIntoView({\n                    behavior: \"auto\",\n                    block: \"nearest\",\n                    inline: \"start\",\n                })\n            );\n        }\n    }, []);\n\n    return (\n        <div ref={ref} className={styles.container}>\n            <h4 className=\"App-ctt-heading\">Vardagar</h4>\n            <div className=\"App-completeTimeTable\">\n                {weekdays.map((time) => (\n                    <span\n                        key={time}\n                        className={\n                            \"App-timeTag \" +\n                            (time === selectedTime ? \"is-selected\" : \"\")\n                        }\n                    >\n                        {time}\n                    </span>\n                ))}\n            </div>\n            <h4 className=\"App-ctt-heading\">Helger</h4>\n            <div className=\"App-completeTimeTable\">\n                {weekends.map((time) => (\n                    <span\n                        key={time}\n                        className={\n                            \"App-timeTag \" +\n                            (time === selectedTime ? \"is-selected\" : \"\")\n                        }\n                    >\n                        {time}\n                    </span>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nfunction moveFirstLast<T>(arr: T[]) {\n    arr.push(arr.shift()!);\n    return arr;\n}\n","import \"./App.css\";\nimport {\n    formatTime,\n    getHoliday,\n    getNextDeparture,\n    isWeekendTraffic,\n    relativeTime,\n} from \"./services/timetable\";\nimport useForceUpdate from \"./utils/hooks/useForceUpdate\";\nimport useInterval from \"./utils/hooks/useInterval\";\nimport Collapsable from \"./components/Collapsable\";\nimport FullTimeTable from \"./components/FullTimeTable\";\nimport dayjs from \"dayjs\";\n\nfunction App() {\n    const now = dayjs();\n    const nextDepLumabryggan = getNextDeparture(\"lumabryggan\", now);\n    const nextDepBarnängen = getNextDeparture(\"barnängen\", now);\n    const nextDepHenriksdal = getNextDeparture(\"henriksdal\", now);\n    const weekendTraffic = isWeekendTraffic(now);\n    const holiday = getHoliday(now);\n    const forceUpdate = useForceUpdate();\n\n    useInterval(() => {\n        forceUpdate();\n    }, 1000);\n\n    const departureHeader = (stopName: string, nextDeparture: dayjs.Dayjs) => {\n        return (\n            <p className=\"App-depRow\">\n                <strong>{stopName}</strong>{\" \"}\n                <span className=\"App-depTime\">\n                    &nbsp;{formatTime(nextDeparture)}\n                </span>\n                <span>{relativeTime(nextDeparture, now)}</span>\n            </p>\n        );\n    };\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img\n                    src={process.env.PUBLIC_URL + \"/android-chrome-512x512.png\"}\n                    alt=\"Sjöstadsbåten\"\n                    width=\"64\"\n                    height=\"64\"\n                    className=\"App-logo\"\n                />\n                <span className=\"App-logoText\">Sjöstadsbåten</span>\n            </header>\n\n            <main className=\"App-main\">\n                <h2 className=\"App-heading\">Nästa avgång</h2>\n\n                <div className=\"App-departures\">\n                    <Collapsable\n                        name=\"Lumabryggan\"\n                        header={departureHeader(\n                            \"Lumabryggan\",\n                            nextDepLumabryggan\n                        )}\n                    >\n                        <FullTimeTable\n                            stop=\"lumabryggan\"\n                            selectedTime={formatTime(nextDepLumabryggan)}\n                        />\n                    </Collapsable>\n\n                    <Collapsable\n                        name=\"Barnängen\"\n                        header={departureHeader(\"Barnängen\", nextDepBarnängen)}\n                    >\n                        <FullTimeTable\n                            stop=\"barnängen\"\n                            selectedTime={formatTime(nextDepBarnängen)}\n                        />\n                    </Collapsable>\n\n                    <Collapsable\n                        name=\"Henriksdal\"\n                        header={departureHeader(\n                            \"Henriksdal\",\n                            nextDepHenriksdal\n                        )}\n                    >\n                        <FullTimeTable\n                            stop=\"henriksdal\"\n                            selectedTime={formatTime(nextDepHenriksdal)}\n                        />\n                    </Collapsable>\n                </div>\n\n                <p className=\"App-timeTableType\">\n                    <small>\n                        {weekendTraffic\n                            ? holiday\n                                ? `Visar helgtidtabell (${holiday.holiday})`\n                                : \"Visar helgtidtabell\"\n                            : \"Visar vardagstidtabell\"}\n                        <br />\n                        Gäller t.o.m. 24 juni 2021\n                        <br />\n                        <small>\n                            <a\n                                href=\"https://github.com/aolde/sjostadsbaten\"\n                                target=\"_blank\"\n                                rel=\"noreferrer\"\n                                className=\"App-github\"\n                            >\n                                Github\n                            </a>\n                        </small>\n                    </small>\n                </p>\n            </main>\n        </div>\n    );\n}\n\nexport default App;\n","import { useState } from \"react\";\n\nexport default function useForceUpdate() {\n    const set = useState(0)[1];\n    return () => set((s) => s + 1);\n}\n","import { useRef, useEffect } from \"react\";\n\nexport default function useInterval(callback: () => void, delay: number) {\n    const savedCallback = useRef<() => void>();\n\n    useEffect(() => {\n        savedCallback.current = callback;\n    });\n\n    useEffect(() => {\n        function tick() {\n            savedCallback.current?.();\n        }\n\n        let id = setInterval(tick, delay);\n        return () => clearInterval(id);\n    }, [delay]);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as mixpanel from \"mixpanel-browser\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nmixpanel.init(\n    \"a3672ad650ae8873139d57e3a108d00c\",\n    { api_host: \"https://api-eu.mixpanel.com\" },\n    \"\"\n);\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\nmixpanel.track(\"Page view\", { pageName: \"Start\" });\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}