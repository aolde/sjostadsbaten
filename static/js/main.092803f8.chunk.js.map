{"version":3,"sources":["services/holidays.ts","services/timetable.ts","App.tsx","utils/hooks/useForceUpdate.ts","utils/hooks/useInterval.ts","reportWebVitals.ts","index.tsx"],"names":["holidays","date","holiday","dayjs","extend","isLeapYearPlugin","relativeTimePlugin","isSameOrAfterPlugin","locale","timeTable","weekdays","lumabryggan","barnängen","henriksdal","weekends","getNextDeparture","from","now","times","isWeekendTraffic","departureTime","split","map","part","parseFloat","hour","minute","time","second","isSameOrAfter","add","relativeTime","day","dayOfWeek","isWeekend","getHoliday","Boolean","format","find","App","nextDepLumabryggan","nextDepBarnängen","nextDepHenriksdal","weekendTraffic","forceUpdate","set","useState","s","useForceUpdate","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","className","src","alt","width","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAUeA,EAVE,CACb,CAAEC,KAAM,aAAcC,QAAS,iBAC/B,CAAED,KAAM,aAAcC,QAAS,oBAC/B,CAAED,KAAM,aAAcC,QAAS,mBAC/B,CAAED,KAAM,aAAcC,QAAS,oBAC/B,CAAED,KAAM,aAAcC,QAAS,6BAC/B,CAAED,KAAM,aAAcC,QAAS,kBAC/B,CAAED,KAAM,aAAcC,QAAS,YAC/B,CAAED,KAAM,aAAcC,QAAS,kB,MCDnCC,IAAMC,OAAOC,KACbF,IAAMC,OAAOE,KACbH,IAAMC,OAAOG,KACbJ,IAAMK,OAAO,MAEb,IAAMC,EAAY,CACdC,SAAU,CACNC,YAAa,CACT,QAEA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,SAGJC,eAAW,CACP,QAEA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,SAGJC,WAAY,CACR,QAEA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,QAEA,QACA,QACA,QACA,QACA,QACA,QAEA,QACA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA,QAEA,QACA,QACA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","file":"static/js/main.092803f8.chunk.js","sourcesContent":["const holidays = [\n    { date: \"2021-01-01\", holiday: \"Nyårsdagen\" },\n    { date: \"2021-01-06\", holiday: \"Trettondedag jul\" },\n    { date: \"2021-04-02\", holiday: \"Långfredagen\" },\n    { date: \"2021-04-05\", holiday: \"Annandag påsk\" },\n    { date: \"2021-05-13\", holiday: \"Kristi himmelsfärdsdag\" },\n    { date: \"2021-06-25\", holiday: \"Midsommarafton\" },\n    { date: \"2021-12-24\", holiday: \"Julafton\" },\n    { date: \"2021-12-31\", holiday: \"Nyårsafton\" },\n];\nexport default holidays;\n","import dayjs from \"dayjs\";\nimport relativeTimePlugin from \"dayjs/plugin/relativeTime\";\nimport isLeapYearPlugin from \"dayjs/plugin/isLeapYear\";\nimport isSameOrAfterPlugin from \"dayjs/plugin/isSameOrAfter\";\nimport holidays from \"./holidays\";\nimport \"dayjs/locale/sv\";\n\ndayjs.extend(isLeapYearPlugin);\ndayjs.extend(relativeTimePlugin);\ndayjs.extend(isSameOrAfterPlugin);\ndayjs.locale(\"sv\");\n\nconst timeTable = {\n    weekdays: {\n        lumabryggan: [\n            \"00:05\",\n\n            \"06:05\",\n            \"06:25\",\n            \"06:45\",\n\n            \"07:05\",\n            \"07:15\",\n            \"07:25\",\n            \"07:35\",\n            \"07:45\",\n            \"07:55\",\n\n            \"08:05\",\n            \"08:15\",\n            \"08:25\",\n            \"08:35\",\n            \"08:45\",\n            \"08:55\",\n\n            \"09:05\",\n            \"09:25\",\n            \"09:45\",\n\n            \"10:05\",\n            \"10:25\",\n            \"10:45\",\n\n            \"11:05\",\n            \"11:25\",\n            \"11:45\",\n\n            \"12:05\",\n            \"12:25\",\n            \"12:45\",\n\n            \"13:05\",\n            \"13:25\",\n            \"13:45\",\n\n            \"14:05\",\n            \"14:25\",\n            \"14:45\",\n\n            \"15:05\",\n            \"15:25\",\n            \"15:45\",\n            \"15:55\",\n\n            \"16:05\",\n            \"16:15\",\n            \"16:25\",\n            \"16:35\",\n            \"16:45\",\n            \"16:55\",\n\n            \"17:05\",\n            \"17:15\",\n            \"17:25\",\n            \"17:35\",\n            \"17:45\",\n            \"17:55\",\n\n            \"18:05\",\n            \"18:25\",\n            \"18:45\",\n\n            \"19:05\",\n            \"19:25\",\n            \"19:45\",\n\n            \"20:05\",\n            \"20:25\",\n            \"20:45\",\n\n            \"21:05\",\n            \"21:25\",\n            \"21:45\",\n\n            \"22:05\",\n            \"22:25\",\n            \"22:45\",\n\n            \"23:05\",\n            \"23:25\",\n            \"23:45\",\n        ],\n\n        barnängen: [\n            \"00:00\",\n\n            \"06:00\",\n            \"06:20\",\n            \"06:40\",\n\n            \"07:00\",\n            \"07:10\",\n            \"07:20\",\n            \"07:30\",\n            \"07:40\",\n            \"07:50\",\n\n            \"08:00\",\n            \"08:10\",\n            \"08:20\",\n            \"08:30\",\n            \"08:40\",\n            \"08:50\",\n\n            \"09:00\",\n            \"09:20\",\n            \"09:40\",\n\n            \"10:00\",\n            \"10:20\",\n            \"10:40\",\n\n            \"11:00\",\n            \"11:20\",\n            \"11:40\",\n\n            \"12:00\",\n            \"12:20\",\n            \"12:40\",\n\n            \"13:00\",\n            \"13:20\",\n            \"13:40\",\n\n            \"14:00\",\n            \"14:20\",\n            \"14:40\",\n\n            \"15:00\",\n            \"15:20\",\n            \"15:40\",\n            \"15:50\",\n\n            \"16:00\",\n            \"16:10\",\n            \"16:20\",\n            \"16:30\",\n            \"16:40\",\n            \"16:50\",\n\n            \"17:00\",\n            \"17:10\",\n            \"17:20\",\n            \"17:30\",\n            \"17:40\",\n            \"17:50\",\n\n            \"18:00\",\n            \"18:20\",\n            \"18:40\",\n\n            \"19:00\",\n            \"19:20\",\n            \"19:40\",\n\n            \"20:00\",\n            \"20:20\",\n            \"20:40\",\n\n            \"21:00\",\n            \"21:20\",\n            \"21:40\",\n\n            \"22:00\",\n            \"22:20\",\n            \"22:40\",\n\n            \"23:00\",\n            \"23:20\",\n            \"23:40\",\n        ],\n\n        henriksdal: [\n            \"00:10\",\n\n            \"06:10\",\n            \"06:30\",\n            \"06:50\",\n\n            \"07:00\",\n            \"07:10\",\n            \"07:20\",\n            \"07:30\",\n            \"07:40\",\n            \"07:50\",\n\n            \"08:00\",\n            \"08:10\",\n            \"08:20\",\n            \"08:30\",\n            \"08:40\",\n            \"08:50\",\n\n            \"09:00\",\n            \"09:10\",\n            \"09:30\",\n            \"09:50\",\n\n            \"10:10\",\n            \"10:30\",\n            \"10:50\",\n\n            \"11:10\",\n            \"11:30\",\n            \"11:50\",\n\n            \"12:10\",\n            \"12:30\",\n            \"12:50\",\n\n            \"13:10\",\n            \"13:30\",\n            \"13:50\",\n\n            \"14:10\",\n            \"14:30\",\n            \"14:50\",\n\n            \"15:10\",\n            \"15:30\",\n            \"15:50\",\n\n            \"16:00\",\n            \"16:10\",\n            \"16:20\",\n            \"16:30\",\n            \"16:40\",\n            \"16:50\",\n\n            \"17:00\",\n            \"17:10\",\n            \"17:20\",\n            \"17:30\",\n            \"17:40\",\n            \"17:50\",\n\n            \"18:00\",\n            \"18:10\",\n            \"18:30\",\n            \"18:50\",\n\n            \"19:10\",\n            \"19:30\",\n            \"19:50\",\n\n            \"20:10\",\n            \"20:30\",\n            \"20:50\",\n\n            \"21:10\",\n            \"21:30\",\n            \"21:50\",\n\n            \"22:10\",\n            \"22:30\",\n            \"22:50\",\n\n            \"23:10\",\n            \"23:30\",\n            \"23:50\",\n        ],\n    },\n\n    weekends: {\n        lumabryggan: [\n            \"00:05\",\n\n            \"08:05\",\n            \"08:25\",\n            \"08:45\",\n\n            \"09:05\",\n            \"09:25\",\n            \"09:45\",\n\n            \"10:05\",\n            \"10:25\",\n            \"10:45\",\n\n            \"11:05\",\n            \"11:25\",\n            \"11:45\",\n\n            \"12:05\",\n            \"12:25\",\n            \"12:45\",\n\n            \"13:05\",\n            \"13:25\",\n            \"13:45\",\n\n            \"14:05\",\n            \"14:25\",\n            \"14:45\",\n\n            \"15:05\",\n            \"15:25\",\n            \"15:45\",\n\n            \"16:05\",\n            \"16:25\",\n            \"16:45\",\n\n            \"17:05\",\n            \"17:25\",\n            \"17:45\",\n\n            \"18:05\",\n            \"18:25\",\n            \"18:45\",\n\n            \"19:05\",\n            \"19:25\",\n            \"19:45\",\n\n            \"20:05\",\n            \"20:25\",\n            \"20:45\",\n\n            \"21:05\",\n            \"21:25\",\n            \"21:45\",\n\n            \"22:05\",\n            \"22:25\",\n            \"22:45\",\n\n            \"23:05\",\n            \"23:25\",\n            \"23:45\",\n        ],\n\n        barnängen: [\n            \"00:00\",\n\n            \"08:00\",\n            \"08:20\",\n            \"08:40\",\n\n            \"09:00\",\n            \"09:20\",\n            \"09:40\",\n\n            \"10:00\",\n            \"10:20\",\n            \"10:40\",\n\n            \"11:00\",\n            \"11:20\",\n            \"11:40\",\n\n            \"12:00\",\n            \"12:20\",\n            \"12:40\",\n\n            \"13:00\",\n            \"13:20\",\n            \"13:40\",\n\n            \"14:00\",\n            \"14:20\",\n            \"14:40\",\n\n            \"15:00\",\n            \"15:20\",\n            \"15:40\",\n\n            \"16:00\",\n            \"16:20\",\n            \"16:40\",\n\n            \"17:00\",\n            \"17:20\",\n            \"17:40\",\n\n            \"18:00\",\n            \"18:20\",\n            \"18:40\",\n\n            \"19:00\",\n            \"19:20\",\n            \"19:40\",\n\n            \"20:00\",\n            \"20:20\",\n            \"20:40\",\n\n            \"21:00\",\n            \"21:20\",\n            \"21:40\",\n\n            \"22:00\",\n            \"22:20\",\n            \"22:40\",\n\n            \"23:00\",\n            \"23:20\",\n            \"23:40\",\n        ],\n\n        henriksdal: [\n            \"00:10\",\n\n            \"08:10\",\n            \"08:30\",\n            \"08:50\",\n\n            \"09:10\",\n            \"09:30\",\n            \"09:50\",\n\n            \"10:10\",\n            \"10:30\",\n            \"10:50\",\n\n            \"11:10\",\n            \"11:30\",\n            \"11:50\",\n\n            \"12:10\",\n            \"12:30\",\n            \"12:50\",\n\n            \"13:10\",\n            \"13:30\",\n            \"13:50\",\n\n            \"14:10\",\n            \"14:30\",\n            \"14:50\",\n\n            \"15:10\",\n            \"15:30\",\n            \"15:50\",\n\n            \"16:10\",\n            \"16:30\",\n            \"16:50\",\n\n            \"17:10\",\n            \"17:30\",\n            \"17:50\",\n\n            \"18:10\",\n            \"18:30\",\n            \"18:50\",\n\n            \"19:10\",\n            \"19:30\",\n            \"19:50\",\n\n            \"20:10\",\n            \"20:30\",\n            \"20:50\",\n\n            \"21:10\",\n            \"21:30\",\n            \"21:50\",\n\n            \"22:10\",\n            \"22:30\",\n            \"22:50\",\n\n            \"23:10\",\n            \"23:30\",\n            \"23:50\",\n        ],\n    },\n};\n\nexport function getNextDeparture(\n    from: keyof typeof timeTable.weekdays,\n    now: dayjs.Dayjs = dayjs()\n): dayjs.Dayjs {\n    const times = isWeekendTraffic(now)\n        ? timeTable.weekends\n        : timeTable.weekdays;\n\n    for (const departureTime of times[from]) {\n        const [hour, minute] = departureTime\n            .split(\":\")\n            .map((part) => parseFloat(part));\n\n        const time = now.hour(hour).minute(minute).second(0);\n\n        if (time.isSameOrAfter(now, \"second\")) {\n            return time;\n        }\n    }\n\n    return getNextDeparture(\n        from,\n        now.add(1, \"day\").hour(0).minute(0).second(0)\n    );\n}\n\nexport function relativeTime(time: dayjs.Dayjs, now = dayjs()) {\n    return time.from(now);\n}\n\nexport function isWeekendTraffic(day: dayjs.Dayjs = dayjs()) {\n    const dayOfWeek = day.day();\n    const isWeekend = dayOfWeek === 0 || dayOfWeek === 6;\n\n    if (isWeekend) return true;\n\n    const holiday = getHoliday(day);\n    return Boolean(holiday);\n}\n\nexport function getHoliday(day: dayjs.Dayjs = dayjs()) {\n    const date = day.format(\"YYYY-MM-DD\");\n    return holidays.find((day) => day.date === date);\n}\n","import \"./App.css\";\nimport {\n    getHoliday,\n    getNextDeparture,\n    isWeekendTraffic,\n    relativeTime,\n} from \"./services/timetable\";\nimport useForceUpdate from \"./utils/hooks/useForceUpdate\";\nimport useInterval from \"./utils/hooks/useInterval\";\nimport dayjs from \"dayjs\";\n\nfunction App() {\n    const now = dayjs().hour(23).minute(56).second(0);\n    const nextDepLumabryggan = getNextDeparture(\"lumabryggan\", now);\n    const nextDepBarnängen = getNextDeparture(\"barnängen\", now);\n    const nextDepHenriksdal = getNextDeparture(\"henriksdal\", now);\n    const weekendTraffic = isWeekendTraffic(now);\n    const holiday = getHoliday(now);\n    const forceUpdate = useForceUpdate();\n\n    useInterval(() => {\n        forceUpdate();\n    }, 1000);\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <img\n                    src={process.env.PUBLIC_URL + \"/android-chrome-512x512.png\"}\n                    alt=\"Nästa avgång i Sjöstadstrafiken\"\n                    width=\"128\"\n                    height=\"128\"\n                />\n\n                <h1 className=\"App-heading\">Nästa avgång i Sjöstadstrafiken</h1>\n\n                <div className=\"App-departures\">\n                    <p className=\"App-depRow\">\n                        <strong>Lumabryggan</strong>{\" \"}\n                        {relativeTime(nextDepLumabryggan, now)}\n                        <span className=\"App-depTime\">\n                            &nbsp;({nextDepLumabryggan.format(\"HH:mm\")})\n                        </span>\n                    </p>\n                    <p className=\"App-depRow\">\n                        <strong>Barnängen</strong>{\" \"}\n                        {relativeTime(nextDepBarnängen, now)}\n                        <span className=\"App-depTime\">\n                            &nbsp;({nextDepBarnängen.format(\"HH:mm\")})\n                        </span>\n                    </p>\n                    <p className=\"App-depRow\">\n                        <strong>Henriksdal</strong>{\" \"}\n                        {relativeTime(nextDepHenriksdal, now)}\n                        <span className=\"App-depTime\">\n                            &nbsp;({nextDepHenriksdal.format(\"HH:mm\")})\n                        </span>\n                    </p>\n                </div>\n\n                <p className=\"App-timeTableType\">\n                    <small>\n                        {weekendTraffic\n                            ? holiday\n                                ? `Visar helgtidtabell (${holiday.holiday})`\n                                : \"Visar helgtidtabell\"\n                            : \"Visar vardagstidtabell\"}\n                    </small>\n                </p>\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n","import { useState } from \"react\";\n\nexport default function useForceUpdate() {\n    const set = useState(0)[1];\n    return () => set((s) => s + 1);\n}\n","import { useRef, useEffect } from \"react\";\n\nexport default function useInterval(callback: () => void, delay: number) {\n    const savedCallback = useRef<() => void>();\n\n    useEffect(() => {\n        savedCallback.current = callback;\n    });\n\n    useEffect(() => {\n        function tick() {\n            savedCallback.current?.();\n        }\n\n        let id = setInterval(tick, delay);\n        return () => clearInterval(id);\n    }, [delay]);\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}